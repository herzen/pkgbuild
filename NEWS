Version 1.1.0:

	Bugs fixed:

	- in 1.0.1 source packages did not include the %use'd spec files

	- prep mode no longer checks the dependencies (Dermot McCluskey)

	- in download mode, wget times out after 60 sec

        - directives like %package are now case insensitive to follow
          rpm's behaviour

	- text wrapping implemented for --dumprc (Damien Carbery)

	- fixed bug where nested %if and %ifnarch or %ifnos
	  conditionals confused the parser at the %endif line

	- do not include a copy of the class action script when using
          system (/usr/sadm/install/scripts) CASs.

        New features:

        - building as root is no longer supported, instead each user can
          have their own %_topdir.  This defaults to $HOME/packages but
          can be redefined with one of:

		.pkgtoolrc  (topdir: /path/to/topdir)
		pkgtool --topdir /path/to/topdir
		pkgbuild --define '%_topdir /path/to/topdir'

	  The --with-topdir configure option has been removed, also the
	  --enable-sticky-dirs option.

	  Users need the Software Installation profile to be able to
	  install/uninstall packages.  Lacking that, they will still be
	  able to use modes like build-only, prep, download, which
	  do not involve installing/uninstalling packages.

        - spectool is a new script that is useful for extracting information
          from spec file, for example:

		% spectool get_sources gimp.spec
		ftp://ftp.gimp.org/pub/gimp/help/gimp-help-2-0.10.tar.gz
		ftp://ftp.gimp.org/pub/gimp/v2.3/gimp-2.3.9.tar.bz2
		% spectool eval '%version' gimp.spec
		2.3.9

	  Useful for scripting.  Use spectool --help for more details
	  about usage.  Will write a man page at some stage...

	- .pkgtoolrc has been enhanced to allow appending to existing
          settings.  Example:

		tarballdirs: ${tarballdirs}:/path/to/my/tarballs

	- install-pkgs mode is now implemented

        - when creating the depend file, pkgbuild uses the list of Solaris
          package names for packages that are not installed on the system.
	  The list is a simple text file:

		%_libdir/pkgbuild-%version/pkgnames

        - added support for pkginfo tags required for supporting Zones:
	  SUNW_pkg_allzones, SUNW_pkg_hollow, SUNW_pkg_thiszone

	- report a warning if %files contains absolute symlinks
	  and report and error if an absolute symlink points to
	  $RPM_BUILD_ROOT

Version 1.0.1:

	One minor incompatibility from eariler versions:

	- The current date is no longer appended to SUNW_Rev.
	  If you have a spec file with
	    SUNW_Rev:    10.2.4
	  change it to
	    SUNW_Rev:    10.2.4.%(date +%Y.%m.%d.%H.%M)
	  to get the same behaviour as in earlier versions.

	Other changes:

	- SUNW_PkgType tag defined.  Overrides the default (root or usr)
	  PKGTYPE values.

	- _invalid_patches_terminate_build macro added: if set to 0
           (default is 1), patches that don't apply are ignored and a
           warning is printed

	Bugs fixed:

	- fix bug in pkgtool where it did not copy the class action scripts
	  to SOURCES.

	- fix --with-foo and --without-foo options in pkgtool to be the same
	  as in pkgbuild

	- speed up dependency checking in pkgtool (starts building much
	  faster)

	- fix rpm_spec.pm to handle %{!?foo:bar} (same as %{?!foo:bar})

Version 1.0.0:
	Incompatible changes since 0.9.x:

	- Unpackaged file now break the build (just like in rpm4).
	  To disable this behaviour, set the
          "_unpackaged_files_terminate_build" macro to 0.
	  (just like in rpm4)

        - In scriptlet references like %foo.prep and %foo.build, the
	  effect of the "-d subdir" option was fixed.  In the 0.9.x
	  versions these macros did not cd back to the original
	  directory, but stayed in "subdir".  That was not the expected
	  behaviour but a bug that is now fixed but it breaks spec
	  files that depend on the old behaviour.

	- slight change in the way %class files work:
	  non-%config files that belong to a %class are type 'f' in the
          prototype; %class %config files are type 'e'

	More changes in this release:

	- The pkgtool script was added.  This is a higher level build
	  script that takes care of downloading sources, copying to
	  SOURCES, copying spec files to SPECS, building multiple
	  modules based on the dependency info in the spec files and
	  much much more...  It's based on the jds build script used
	  internally within Sun.  Use pkgtool --help for more info.

	- New pkgbuild option: --pkgformat {datastream|ds|filesystem|fs}

        - implement %ghost files:
	  In pkgbuild's implementation:
	   - %ghost files are volatile ('v' file type in the prototype)
	   - an empty file is added to the prototype if the %ghost file
	     does not exist in $RPM_BUILD_ROOT

	- pkgbuild now requires GNU tar and GNU patch (/usr/sfw/bin/gtar 
	  and /usr/bin/gpatch on Solaris or SUNWgtar and SUNWgpch)

	- pkgtool has an optional dependency on wget (SUNWwgetr, SUNWwgetu)
	  for downloading sources

	- the pkgtool tarball now builds out of the box on Linux using
	  rpmbuild -ta <tarball name>;  Why would anyone build it on
	  Linux?  You can use the pkgtool script to control a linux
	  build and it will run rpmbuild/rpm instead of pkgbuild.

Version 0.9.0:
	released on sourceforge.net -- many thanks to them for hosting it
	future releases will be posted on http://pkgbuild.sourceforge.net/
